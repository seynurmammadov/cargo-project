{"version":3,"file":"ngx-translate-core.js","sources":["../../../../projects/ngx-translate/core/src/lib/translate.loader.ts","../../../../projects/ngx-translate/core/src/lib/missing-translation-handler.ts","../../../../projects/ngx-translate/core/src/lib/util.ts","../../../../projects/ngx-translate/core/src/lib/translate.parser.ts","../../../../projects/ngx-translate/core/src/lib/translate.compiler.ts","../../../../projects/ngx-translate/core/src/lib/translate.store.ts","../../../../projects/ngx-translate/core/src/lib/translate.service.ts","../../../../projects/ngx-translate/core/src/lib/translate.directive.ts","../../../../projects/ngx-translate/core/src/lib/translate.pipe.ts","../../../../projects/ngx-translate/core/src/public_api.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable} from \"@angular/core\";\nimport {Observable, of} from \"rxjs\";\n\nexport abstract class TranslateLoader {\n  abstract getTranslation(lang: string): Observable<any>;\n}\n\n/**\n * This loader is just a placeholder that does nothing, in case you don't need a loader at all\n */\n@Injectable()\nexport class TranslateFakeLoader extends TranslateLoader {\n  getTranslation(lang: string): Observable<any> {\n    return of({});\n  }\n}\n","import {Injectable} from \"@angular/core\";\nimport {TranslateService} from \"./translate.service\";\n\nexport interface MissingTranslationHandlerParams {\n  /**\n   * the key that's missing in translation files\n   */\n  key: string;\n\n  /**\n   * an instance of the service that was unable to translate the key.\n   */\n  translateService: TranslateService;\n\n  /**\n   * interpolation params that were passed along for translating the given key.\n   */\n  interpolateParams?: Object;\n}\n\nexport abstract class MissingTranslationHandler {\n  /**\n   * A function that handles missing translations.\n   *\n   * @param params context for resolving a missing translation\n   * @returns a value or an observable\n   * If it returns a value, then this value is used.\n   * If it return an observable, the value returned by this observable will be used (except if the method was \"instant\").\n   * If it doesn't return then the key will be used as a value\n   */\n  abstract handle(params: MissingTranslationHandlerParams): any;\n}\n\n/**\n * This handler is just a placeholder that does nothing, in case you don't need a missing translation handler at all\n */\n@Injectable()\nexport class FakeMissingTranslationHandler implements MissingTranslationHandler {\n  handle(params: MissingTranslationHandlerParams): string {\n    return params.key;\n  }\n}\n","/* tslint:disable */\n/**\n * Determines if two objects or two values are equivalent.\n *\n * Two objects or values are considered equivalent if at least one of the following is true:\n *\n * * Both objects or values pass `===` comparison.\n * * Both objects or values are of the same type and all of their properties are equal by\n *   comparing them with `equals`.\n *\n * @param o1 Object or value to compare.\n * @param o2 Object or value to compare.\n * @returns true if arguments are equal.\n */\nexport function equals(o1: any, o2: any): boolean {\n  if (o1 === o2) return true;\n  if (o1 === null || o2 === null) return false;\n  if (o1 !== o1 && o2 !== o2) return true; // NaN === NaN\n  let t1 = typeof o1, t2 = typeof o2, length: number, key: any, keySet: any;\n  if (t1 == t2 && t1 == 'object') {\n    if (Array.isArray(o1)) {\n      if (!Array.isArray(o2)) return false;\n      if ((length = o1.length) == o2.length) {\n        for (key = 0; key < length; key++) {\n          if (!equals(o1[key], o2[key])) return false;\n        }\n        return true;\n      }\n    } else {\n      if (Array.isArray(o2)) {\n        return false;\n      }\n      keySet = Object.create(null);\n      for (key in o1) {\n        if (!equals(o1[key], o2[key])) {\n          return false;\n        }\n        keySet[key] = true;\n      }\n      for (key in o2) {\n        if (!(key in keySet) && typeof o2[key] !== 'undefined') {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n  return false;\n}\n/* tslint:enable */\n\nexport function isDefined(value: any): boolean {\n  return typeof value !== 'undefined' && value !== null;\n}\n\nexport function isObject(item: any): boolean {\n  return (item && typeof item === 'object' && !Array.isArray(item));\n}\n\nexport function mergeDeep(target: any, source: any): any {\n  let output = Object.assign({}, target);\n  if (isObject(target) && isObject(source)) {\n    Object.keys(source).forEach((key: any) => {\n      if (isObject(source[key])) {\n        if (!(key in target)) {\n          Object.assign(output, {[key]: source[key]});\n        } else {\n          output[key] = mergeDeep(target[key], source[key]);\n        }\n      } else {\n        Object.assign(output, {[key]: source[key]});\n      }\n    });\n  }\n  return output;\n}\n","import {Injectable} from \"@angular/core\";\nimport {isDefined} from \"./util\";\n\nexport abstract class TranslateParser {\n  /**\n   * Interpolates a string to replace parameters\n   * \"This is a {{ key }}\" ==> \"This is a value\", with params = { key: \"value\" }\n   * @param expr\n   * @param params\n   */\n  abstract interpolate(expr: string | Function, params?: any): string;\n\n  /**\n   * Gets a value from an object by composed key\n   * parser.getValue({ key1: { keyA: 'valueI' }}, 'key1.keyA') ==> 'valueI'\n   * @param target\n   * @param key\n   */\n  abstract getValue(target: any, key: string): any\n}\n\n@Injectable()\nexport class TranslateDefaultParser extends TranslateParser {\n  templateMatcher: RegExp = /{{\\s?([^{}\\s]*)\\s?}}/g;\n\n  public interpolate(expr: string | Function, params?: any): string {\n    let result: string;\n\n    if (typeof expr === 'string') {\n      result = this.interpolateString(expr, params);\n    } else if (typeof expr === 'function') {\n      result = this.interpolateFunction(expr, params);\n    } else {\n      // this should not happen, but an unrelated TranslateService test depends on it\n      result = expr as string;\n    }\n\n    return result;\n  }\n\n  getValue(target: any, key: string): any {\n    let keys = typeof key === 'string' ? key.split('.') : [key];\n    key = '';\n    do {\n      key += keys.shift();\n      if (isDefined(target) && isDefined(target[key]) && (typeof target[key] === 'object' || !keys.length)) {\n        target = target[key];\n        key = '';\n      } else if (!keys.length) {\n        target = undefined;\n      } else {\n        key += '.';\n      }\n    } while (keys.length);\n\n    return target;\n  }\n\n  private interpolateFunction(fn: Function, params?: any) {\n    return fn(params);\n  }\n\n  private interpolateString(expr: string, params?: any) {\n    if (!params) {\n      return expr;\n    }\n\n    return expr.replace(this.templateMatcher, (substring: string, b: string) => {\n      let r = this.getValue(params, b);\n      return isDefined(r) ? r : substring;\n    });\n  }\n}\n","import {Injectable} from \"@angular/core\";\n\nexport abstract class TranslateCompiler {\n  abstract compile(value: string, lang: string): string | Function;\n\n  abstract compileTranslations(translations: any, lang: string): any;\n}\n\n/**\n * This compiler is just a placeholder that does nothing, in case you don't need a compiler at all\n */\n@Injectable()\nexport class TranslateFakeCompiler extends TranslateCompiler {\n  compile(value: string, lang: string): string | Function {\n    return value;\n  }\n\n  compileTranslations(translations: any, lang: string): any {\n    return translations;\n  }\n}\n","import {EventEmitter} from \"@angular/core\";\nimport {DefaultLangChangeEvent, LangChangeEvent, TranslationChangeEvent} from \"./translate.service\";\n\nexport class TranslateStore {\n  /**\n   * The default lang to fallback when translations are missing on the current lang\n   */\n  public defaultLang: string;\n\n  /**\n   * The lang currently used\n   */\n  public currentLang: string = this.defaultLang;\n\n  /**\n   * a list of translations per lang\n   */\n  public translations: any = {};\n\n  /**\n   * an array of langs\n   */\n  public langs: Array<string> = [];\n\n  /**\n   * An EventEmitter to listen to translation change events\n   * onTranslationChange.subscribe((params: TranslationChangeEvent) => {\n     *     // do something\n     * });\n   */\n  public onTranslationChange: EventEmitter<TranslationChangeEvent> = new EventEmitter<TranslationChangeEvent>();\n\n  /**\n   * An EventEmitter to listen to lang change events\n   * onLangChange.subscribe((params: LangChangeEvent) => {\n     *     // do something\n     * });\n   */\n  public onLangChange: EventEmitter<LangChangeEvent> = new EventEmitter<LangChangeEvent>();\n\n  /**\n   * An EventEmitter to listen to default lang change events\n   * onDefaultLangChange.subscribe((params: DefaultLangChangeEvent) => {\n     *     // do something\n     * });\n   */\n  public onDefaultLangChange: EventEmitter<DefaultLangChangeEvent> = new EventEmitter<DefaultLangChangeEvent>();\n}\n","import {EventEmitter, Inject, Injectable, InjectionToken} from \"@angular/core\";\nimport {concat, forkJoin, isObservable, Observable, of, defer} from \"rxjs\";\nimport {concatMap, map, shareReplay, switchMap, take} from \"rxjs/operators\";\nimport {MissingTranslationHandler, MissingTranslationHandlerParams} from \"./missing-translation-handler\";\nimport {TranslateCompiler} from \"./translate.compiler\";\nimport {TranslateLoader} from \"./translate.loader\";\nimport {TranslateParser} from \"./translate.parser\";\n\nimport {TranslateStore} from \"./translate.store\";\nimport {isDefined, mergeDeep} from \"./util\";\n\nexport const USE_STORE = new InjectionToken<string>('USE_STORE');\nexport const USE_DEFAULT_LANG = new InjectionToken<string>('USE_DEFAULT_LANG');\nexport const DEFAULT_LANGUAGE = new InjectionToken<string>('DEFAULT_LANGUAGE');\nexport const USE_EXTEND = new InjectionToken<string>('USE_EXTEND');\n\nexport interface TranslationChangeEvent {\n  translations: any;\n  lang: string;\n}\n\nexport interface LangChangeEvent {\n  lang: string;\n  translations: any;\n}\n\nexport interface DefaultLangChangeEvent {\n  lang: string;\n  translations: any;\n}\n\ndeclare interface Window {\n  navigator: any;\n}\n\ndeclare const window: Window;\n\n@Injectable()\nexport class TranslateService {\n  private loadingTranslations: Observable<any>;\n  private pending: boolean = false;\n  private _onTranslationChange: EventEmitter<TranslationChangeEvent> = new EventEmitter<TranslationChangeEvent>();\n  private _onLangChange: EventEmitter<LangChangeEvent> = new EventEmitter<LangChangeEvent>();\n  private _onDefaultLangChange: EventEmitter<DefaultLangChangeEvent> = new EventEmitter<DefaultLangChangeEvent>();\n  private _defaultLang: string;\n  private _currentLang: string;\n  private _langs: Array<string> = [];\n  private _translations: any = {};\n  private _translationRequests: any = {};\n\n  /**\n   * An EventEmitter to listen to translation change events\n   * onTranslationChange.subscribe((params: TranslationChangeEvent) => {\n     *     // do something\n     * });\n   */\n  get onTranslationChange(): EventEmitter<TranslationChangeEvent> {\n    return this.isolate ? this._onTranslationChange : this.store.onTranslationChange;\n  }\n\n  /**\n   * An EventEmitter to listen to lang change events\n   * onLangChange.subscribe((params: LangChangeEvent) => {\n     *     // do something\n     * });\n   */\n  get onLangChange(): EventEmitter<LangChangeEvent> {\n    return this.isolate ? this._onLangChange : this.store.onLangChange;\n  }\n\n  /**\n   * An EventEmitter to listen to default lang change events\n   * onDefaultLangChange.subscribe((params: DefaultLangChangeEvent) => {\n     *     // do something\n     * });\n   */\n  get onDefaultLangChange() {\n    return this.isolate ? this._onDefaultLangChange : this.store.onDefaultLangChange;\n  }\n\n  /**\n   * The default lang to fallback when translations are missing on the current lang\n   */\n  get defaultLang(): string {\n    return this.isolate ? this._defaultLang : this.store.defaultLang;\n  }\n\n  set defaultLang(defaultLang: string) {\n    if (this.isolate) {\n      this._defaultLang = defaultLang;\n    } else {\n      this.store.defaultLang = defaultLang;\n    }\n  }\n\n  /**\n   * The lang currently used\n   */\n  get currentLang(): string {\n    return this.isolate ? this._currentLang : this.store.currentLang;\n  }\n\n  set currentLang(currentLang: string) {\n    if (this.isolate) {\n      this._currentLang = currentLang;\n    } else {\n      this.store.currentLang = currentLang;\n    }\n  }\n\n  /**\n   * an array of langs\n   */\n  get langs(): string[] {\n    return this.isolate ? this._langs : this.store.langs;\n  }\n\n  set langs(langs: string[]) {\n    if (this.isolate) {\n      this._langs = langs;\n    } else {\n      this.store.langs = langs;\n    }\n  }\n\n  /**\n   * a list of translations per lang\n   */\n  get translations(): any {\n    return this.isolate ? this._translations : this.store.translations;\n  }\n\n  set translations(translations: any) {\n    if (this.isolate) {\n      this._translations = translations;\n    } else {\n      this.store.translations = translations;\n    }\n  }\n\n  /**\n   *\n   * @param store an instance of the store (that is supposed to be unique)\n   * @param currentLoader An instance of the loader currently used\n   * @param compiler An instance of the compiler currently used\n   * @param parser An instance of the parser currently used\n   * @param missingTranslationHandler A handler for missing translations.\n   * @param useDefaultLang whether we should use default language translation when current language translation is missing.\n   * @param isolate whether this service should use the store or not\n   * @param extend To make a child module extend (and use) translations from parent modules.\n   * @param defaultLanguage Set the default language using configuration\n   */\n  constructor(public store: TranslateStore,\n              public currentLoader: TranslateLoader,\n              public compiler: TranslateCompiler,\n              public parser: TranslateParser,\n              public missingTranslationHandler: MissingTranslationHandler,\n              @Inject(USE_DEFAULT_LANG) private useDefaultLang: boolean = true,\n              @Inject(USE_STORE) private isolate: boolean = false,\n              @Inject(USE_EXTEND) private extend: boolean = false,\n              @Inject(DEFAULT_LANGUAGE) defaultLanguage: string) {\n    /** set the default language from configuration */\n    if (defaultLanguage) {\n      this.setDefaultLang(defaultLanguage);\n    }\n  }\n\n  /**\n   * Sets the default language to use as a fallback\n   */\n  public setDefaultLang(lang: string): void {\n    if (lang === this.defaultLang) {\n      return;\n    }\n\n    let pending: Observable<any> = this.retrieveTranslations(lang);\n\n    if (typeof pending !== \"undefined\") {\n      // on init set the defaultLang immediately\n      if (this.defaultLang == null) {\n        this.defaultLang = lang;\n      }\n\n      pending.pipe(take(1))\n        .subscribe((res: any) => {\n          this.changeDefaultLang(lang);\n        });\n    } else { // we already have this language\n      this.changeDefaultLang(lang);\n    }\n  }\n\n  /**\n   * Gets the default language used\n   */\n  public getDefaultLang(): string {\n    return this.defaultLang;\n  }\n\n  /**\n   * Changes the lang currently used\n   */\n  public use(lang: string): Observable<any> {\n    // don't change the language if the language given is already selected\n    if (lang === this.currentLang) {\n      return of(this.translations[lang]);\n    }\n\n    let pending: Observable<any> = this.retrieveTranslations(lang);\n\n    if (typeof pending !== \"undefined\") {\n      // on init set the currentLang immediately\n      if (!this.currentLang) {\n        this.currentLang = lang;\n      }\n\n      pending.pipe(take(1))\n        .subscribe((res: any) => {\n          this.changeLang(lang);\n        });\n\n      return pending;\n    } else { // we have this language, return an Observable\n      this.changeLang(lang);\n\n      return of(this.translations[lang]);\n    }\n  }\n\n  /**\n   * Retrieves the given translations\n   */\n  private retrieveTranslations(lang: string): Observable<any> {\n    let pending: Observable<any>;\n\n    // if this language is unavailable or extend is true, ask for it\n    if (typeof this.translations[lang] === \"undefined\" || this.extend) {\n      this._translationRequests[lang] = this._translationRequests[lang] || this.getTranslation(lang);\n      pending = this._translationRequests[lang];\n    }\n\n    return pending;\n  }\n\n  /**\n   * Gets an object of translations for a given language with the current loader\n   * and passes it through the compiler\n   */\n  public getTranslation(lang: string): Observable<any> {\n    this.pending = true;\n    const loadingTranslations = this.currentLoader.getTranslation(lang).pipe(\n      shareReplay(1),\n      take(1),\n    );\n\n    this.loadingTranslations = loadingTranslations.pipe(\n      map((res: Object) => this.compiler.compileTranslations(res, lang)),\n      shareReplay(1),\n      take(1),\n    );\n\n    this.loadingTranslations\n      .subscribe({\n        next: (res: Object) => {\n          this.translations[lang] = this.extend && this.translations[lang] ? { ...res, ...this.translations[lang] } : res;\n          this.updateLangs();\n          this.pending = false;\n        },\n        error: (err: any) => {\n          this.pending = false;\n        }\n      });\n\n    return loadingTranslations;\n  }\n\n  /**\n   * Manually sets an object of translations for a given language\n   * after passing it through the compiler\n   */\n  public setTranslation(lang: string, translations: Object, shouldMerge: boolean = false): void {\n    translations = this.compiler.compileTranslations(translations, lang);\n    if ((shouldMerge || this.extend) && this.translations[lang]) {\n      this.translations[lang] = mergeDeep(this.translations[lang], translations);\n    } else {\n      this.translations[lang] = translations;\n    }\n    this.updateLangs();\n    this.onTranslationChange.emit({lang: lang, translations: this.translations[lang]});\n  }\n\n  /**\n   * Returns an array of currently available langs\n   */\n  public getLangs(): Array<string> {\n    return this.langs;\n  }\n\n  /**\n   * Add available langs\n   */\n  public addLangs(langs: Array<string>): void {\n    langs.forEach((lang: string) => {\n      if (this.langs.indexOf(lang) === -1) {\n        this.langs.push(lang);\n      }\n    });\n  }\n\n  /**\n   * Update the list of available langs\n   */\n  private updateLangs(): void {\n    this.addLangs(Object.keys(this.translations));\n  }\n\n  /**\n   * Returns the parsed result of the translations\n   */\n  public getParsedResult(translations: any, key: any, interpolateParams?: Object): any {\n    let res: string | Observable<string>;\n\n    if (key instanceof Array) {\n      let result: any = {},\n        observables: boolean = false;\n      for (let k of key) {\n        result[k] = this.getParsedResult(translations, k, interpolateParams);\n        if (isObservable(result[k])) {\n          observables = true;\n        }\n      }\n      if (observables) {\n        const sources = key.map(k => isObservable(result[k]) ? result[k] : of(result[k] as string));\n        return forkJoin(sources).pipe(\n          map((arr: Array<string>) => {\n            let obj: any = {};\n            arr.forEach((value: string, index: number) => {\n              obj[key[index]] = value;\n            });\n            return obj;\n          })\n        );\n      }\n      return result;\n    }\n\n    if (translations) {\n      res = this.parser.interpolate(this.parser.getValue(translations, key), interpolateParams);\n    }\n\n    if (typeof res === \"undefined\" && this.defaultLang != null && this.defaultLang !== this.currentLang && this.useDefaultLang) {\n      res = this.parser.interpolate(this.parser.getValue(this.translations[this.defaultLang], key), interpolateParams);\n    }\n\n    if (typeof res === \"undefined\") {\n      let params: MissingTranslationHandlerParams = {key, translateService: this};\n      if (typeof interpolateParams !== 'undefined') {\n        params.interpolateParams = interpolateParams;\n      }\n      res = this.missingTranslationHandler.handle(params);\n    }\n\n    return typeof res !== \"undefined\" ? res : key;\n  }\n\n  /**\n   * Gets the translated value of a key (or an array of keys)\n   * @returns the translated key, or an object of translated keys\n   */\n  public get(key: string | Array<string>, interpolateParams?: Object): Observable<string | any> {\n    if (!isDefined(key) || !key.length) {\n      throw new Error(`Parameter \"key\" required`);\n    }\n    // check if we are loading a new translation to use\n    if (this.pending) {\n      return this.loadingTranslations.pipe(\n        concatMap((res: any) => {\n          res = this.getParsedResult(res, key, interpolateParams);\n          return isObservable(res) ? res : of(res);\n        }),\n      );\n    } else {\n      let res = this.getParsedResult(this.translations[this.currentLang], key, interpolateParams);\n      return isObservable(res) ? res : of(res);\n    }\n  }\n\n  /**\n   * Returns a stream of translated values of a key (or an array of keys) which updates\n   * whenever the translation changes.\n   * @returns A stream of the translated key, or an object of translated keys\n   */\n  public getStreamOnTranslationChange(key: string | Array<string>, interpolateParams?: Object): Observable<string | any> {\n    if (!isDefined(key) || !key.length) {\n      throw new Error(`Parameter \"key\" required`);\n    }\n\n    return concat(\n      defer(() => this.get(key, interpolateParams)),\n      this.onTranslationChange.pipe(\n        switchMap((event: TranslationChangeEvent) => {\n          const res = this.getParsedResult(event.translations, key, interpolateParams);\n          if (typeof res.subscribe === 'function') {\n            return res;\n          } else {\n            return of(res);\n          }\n        })\n      )\n    );\n  }\n\n  /**\n   * Returns a stream of translated values of a key (or an array of keys) which updates\n   * whenever the language changes.\n   * @returns A stream of the translated key, or an object of translated keys\n   */\n  public stream(key: string | Array<string>, interpolateParams?: Object): Observable<string | any> {\n    if (!isDefined(key) || !key.length) {\n      throw new Error(`Parameter \"key\" required`);\n    }\n\n    return concat(\n      defer(() => this.get(key, interpolateParams)),\n      this.onLangChange.pipe(\n        switchMap((event: LangChangeEvent) => {\n          const res = this.getParsedResult(event.translations, key, interpolateParams);\n          return isObservable(res) ? res : of(res);\n        })\n      ));\n  }\n\n  /**\n   * Returns a translation instantly from the internal state of loaded translation.\n   * All rules regarding the current language, the preferred language of even fallback languages will be used except any promise handling.\n   */\n  public instant(key: string | Array<string>, interpolateParams?: Object): string | any {\n    if (!isDefined(key) || !key.length) {\n      throw new Error(`Parameter \"key\" required`);\n    }\n\n    let res = this.getParsedResult(this.translations[this.currentLang], key, interpolateParams);\n    if (isObservable(res)) {\n      if (key instanceof Array) {\n        let obj: any = {};\n        key.forEach((value: string, index: number) => {\n          obj[key[index]] = key[index];\n        });\n        return obj;\n      }\n      return key;\n    } else {\n      return res;\n    }\n  }\n\n  /**\n   * Sets the translated value of a key, after compiling it\n   */\n  public set(key: string, value: string, lang: string = this.currentLang): void {\n    this.translations[lang][key] = this.compiler.compile(value, lang);\n    this.updateLangs();\n    this.onTranslationChange.emit({lang: lang, translations: this.translations[lang]});\n  }\n\n  /**\n   * Changes the current lang\n   */\n  private changeLang(lang: string): void {\n    this.currentLang = lang;\n    this.onLangChange.emit({lang: lang, translations: this.translations[lang]});\n\n    // if there is no default lang, use the one that we just set\n    if (this.defaultLang == null) {\n      this.changeDefaultLang(lang);\n    }\n  }\n\n  /**\n   * Changes the default lang\n   */\n  private changeDefaultLang(lang: string): void {\n    this.defaultLang = lang;\n    this.onDefaultLangChange.emit({lang: lang, translations: this.translations[lang]});\n  }\n\n  /**\n   * Allows to reload the lang file from the file\n   */\n  public reloadLang(lang: string): Observable<any> {\n    this.resetLang(lang);\n    return this.getTranslation(lang);\n  }\n\n  /**\n   * Deletes inner translation\n   */\n  public resetLang(lang: string): void {\n    this._translationRequests[lang] = undefined;\n    this.translations[lang] = undefined;\n  }\n\n  /**\n   * Returns the language code name from the browser, e.g. \"de\"\n   */\n  public getBrowserLang(): string {\n    if (typeof window === 'undefined' || typeof window.navigator === 'undefined') {\n      return undefined;\n    }\n\n    let browserLang: any = window.navigator.languages ? window.navigator.languages[0] : null;\n    browserLang = browserLang || window.navigator.language || window.navigator.browserLanguage || window.navigator.userLanguage;\n\n    if (typeof browserLang === 'undefined') {\n      return undefined\n    }\n\n    if (browserLang.indexOf('-') !== -1) {\n      browserLang = browserLang.split('-')[0];\n    }\n\n    if (browserLang.indexOf('_') !== -1) {\n      browserLang = browserLang.split('_')[0];\n    }\n\n    return browserLang;\n  }\n\n  /**\n   * Returns the culture language code name from the browser, e.g. \"de-DE\"\n   */\n  public getBrowserCultureLang(): string {\n    if (typeof window === 'undefined' || typeof window.navigator === 'undefined') {\n      return undefined;\n    }\n\n    let browserCultureLang: any = window.navigator.languages ? window.navigator.languages[0] : null;\n    browserCultureLang = browserCultureLang || window.navigator.language || window.navigator.browserLanguage || window.navigator.userLanguage;\n\n    return browserCultureLang;\n  }\n}\n","import {AfterViewChecked, ChangeDetectorRef, Directive, ElementRef, Input, OnDestroy} from '@angular/core';\nimport {Subscription, isObservable} from 'rxjs';\nimport {DefaultLangChangeEvent, LangChangeEvent, TranslateService, TranslationChangeEvent} from './translate.service';\nimport {equals, isDefined} from './util';\n\n@Directive({\n  selector: '[translate],[ngx-translate]'\n})\nexport class TranslateDirective implements AfterViewChecked, OnDestroy {\n  key: string;\n  lastParams: any;\n  currentParams: any;\n  onLangChangeSub: Subscription;\n  onDefaultLangChangeSub: Subscription;\n  onTranslationChangeSub: Subscription;\n\n  @Input() set translate(key: string) {\n    if (key) {\n      this.key = key;\n      this.checkNodes();\n    }\n  }\n\n  @Input() set translateParams(params: any) {\n    if (!equals(this.currentParams, params)) {\n      this.currentParams = params;\n      this.checkNodes(true);\n    }\n  }\n\n  constructor(private translateService: TranslateService, private element: ElementRef, private _ref: ChangeDetectorRef) {\n    // subscribe to onTranslationChange event, in case the translations of the current lang change\n    if (!this.onTranslationChangeSub) {\n      this.onTranslationChangeSub = this.translateService.onTranslationChange.subscribe((event: TranslationChangeEvent) => {\n        if (event.lang === this.translateService.currentLang) {\n          this.checkNodes(true, event.translations);\n        }\n      });\n    }\n\n    // subscribe to onLangChange event, in case the language changes\n    if (!this.onLangChangeSub) {\n      this.onLangChangeSub = this.translateService.onLangChange.subscribe((event: LangChangeEvent) => {\n        this.checkNodes(true, event.translations);\n      });\n    }\n\n    // subscribe to onDefaultLangChange event, in case the default language changes\n    if (!this.onDefaultLangChangeSub) {\n      this.onDefaultLangChangeSub = this.translateService.onDefaultLangChange.subscribe((event: DefaultLangChangeEvent) => {\n        this.checkNodes(true);\n      });\n    }\n  }\n\n  ngAfterViewChecked() {\n    this.checkNodes();\n  }\n\n  checkNodes(forceUpdate = false, translations?: any) {\n    let nodes: NodeList = this.element.nativeElement.childNodes;\n    // if the element is empty\n    if (!nodes.length) {\n      // we add the key as content\n      this.setContent(this.element.nativeElement, this.key);\n      nodes = this.element.nativeElement.childNodes;\n    }\n    for (let i = 0; i < nodes.length; ++i) {\n      let node: any = nodes[i];\n      if (node.nodeType === 3) { // node type 3 is a text node\n        let key: string;\n        if (forceUpdate) {\n          node.lastKey = null;\n        }\n        if(isDefined(node.lookupKey)) {\n          key = node.lookupKey;\n        } else if (this.key) {\n          key = this.key;\n        } else {\n          let content = this.getContent(node);\n          let trimmedContent = content.trim();\n          if (trimmedContent.length) {\n            node.lookupKey = trimmedContent;\n            // we want to use the content as a key, not the translation value\n            if (content !== node.currentValue) {\n              key = trimmedContent;\n              // the content was changed from the user, we'll use it as a reference if needed\n              node.originalContent = content || node.originalContent;\n            } else if (node.originalContent) { // the content seems ok, but the lang has changed\n              // the current content is the translation, not the key, use the last real content as key\n              key = node.originalContent.trim();\n            } else if (content !== node.currentValue) {\n              // we want to use the content as a key, not the translation value\n              key = trimmedContent;\n              // the content was changed from the user, we'll use it as a reference if needed\n              node.originalContent = content || node.originalContent;\n            }\n          }\n        }\n        this.updateValue(key, node, translations);\n      }\n    }\n  }\n\n  updateValue(key: string, node: any, translations: any) {\n    if (key) {\n      if (node.lastKey === key && this.lastParams === this.currentParams) {\n        return;\n      }\n\n      this.lastParams = this.currentParams;\n\n      let onTranslation = (res: string) => {\n        if (res !== key) {\n          node.lastKey = key;\n        }\n        if (!node.originalContent) {\n          node.originalContent = this.getContent(node);\n        }\n        node.currentValue = isDefined(res) ? res : (node.originalContent || key);\n        // we replace in the original content to preserve spaces that we might have trimmed\n        this.setContent(node, this.key ? node.currentValue : node.originalContent.replace(key, node.currentValue));\n        this._ref.markForCheck();\n      };\n\n      if (isDefined(translations)) {\n        let res = this.translateService.getParsedResult(translations, key, this.currentParams);\n        if (isObservable(res)) {\n          res.subscribe(onTranslation);\n        } else {\n          onTranslation(res);\n        }\n      } else {\n        this.translateService.get(key, this.currentParams).subscribe(onTranslation);\n      }\n    }\n  }\n\n  getContent(node: any): string {\n    return isDefined(node.textContent) ? node.textContent : node.data;\n  }\n\n  setContent(node: any, content: string): void {\n    if (isDefined(node.textContent)) {\n      node.textContent = content;\n    } else {\n      node.data = content;\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.onLangChangeSub) {\n      this.onLangChangeSub.unsubscribe();\n    }\n\n    if (this.onDefaultLangChangeSub) {\n      this.onDefaultLangChangeSub.unsubscribe();\n    }\n\n    if (this.onTranslationChangeSub) {\n      this.onTranslationChangeSub.unsubscribe();\n    }\n  }\n}\n","import {ChangeDetectorRef, EventEmitter, Injectable, OnDestroy, Pipe, PipeTransform} from '@angular/core';\nimport {isObservable} from 'rxjs';\nimport {DefaultLangChangeEvent, LangChangeEvent, TranslateService, TranslationChangeEvent} from './translate.service';\nimport {equals, isDefined} from './util';\nimport { Subscription } from 'rxjs';\n\n@Injectable()\n@Pipe({\n  name: 'translate',\n  pure: false // required to update the value when the promise is resolved\n})\nexport class TranslatePipe implements PipeTransform, OnDestroy {\n  value: string = '';\n  lastKey: string;\n  lastParams: any[];\n  onTranslationChange: Subscription;\n  onLangChange: Subscription;\n  onDefaultLangChange: Subscription;\n\n  constructor(private translate: TranslateService, private _ref: ChangeDetectorRef) {\n  }\n\n  updateValue(key: string, interpolateParams?: Object, translations?: any): void {\n    let onTranslation = (res: string) => {\n      this.value = res !== undefined ? res : key;\n      this.lastKey = key;\n      this._ref.markForCheck();\n    };\n    if (translations) {\n      let res = this.translate.getParsedResult(translations, key, interpolateParams);\n      if (isObservable(res.subscribe)) {\n        res.subscribe(onTranslation);\n      } else {\n        onTranslation(res);\n      }\n    }\n    this.translate.get(key, interpolateParams).subscribe(onTranslation);\n  }\n\n  transform(query: string, ...args: any[]): any {\n    if (!query || !query.length) {\n      return query;\n    }\n\n    // if we ask another time for the same key, return the last value\n    if (equals(query, this.lastKey) && equals(args, this.lastParams)) {\n      return this.value;\n    }\n\n    let interpolateParams: Object;\n    if (isDefined(args[0]) && args.length) {\n      if (typeof args[0] === 'string' && args[0].length) {\n        // we accept objects written in the template such as {n:1}, {'n':1}, {n:'v'}\n        // which is why we might need to change it to real JSON objects such as {\"n\":1} or {\"n\":\"v\"}\n        let validArgs: string = args[0]\n          .replace(/(\\')?([a-zA-Z0-9_]+)(\\')?(\\s)?:/g, '\"$2\":')\n          .replace(/:(\\s)?(\\')(.*?)(\\')/g, ':\"$3\"');\n        try {\n          interpolateParams = JSON.parse(validArgs);\n        } catch (e) {\n          throw new SyntaxError(`Wrong parameter in TranslatePipe. Expected a valid Object, received: ${args[0]}`);\n        }\n      } else if (typeof args[0] === 'object' && !Array.isArray(args[0])) {\n        interpolateParams = args[0];\n      }\n    }\n\n    // store the query, in case it changes\n    this.lastKey = query;\n\n    // store the params, in case they change\n    this.lastParams = args;\n\n    // set the value\n    this.updateValue(query, interpolateParams);\n\n    // if there is a subscription to onLangChange, clean it\n    this._dispose();\n\n    // subscribe to onTranslationChange event, in case the translations change\n    if (!this.onTranslationChange) {\n      this.onTranslationChange = this.translate.onTranslationChange.subscribe((event: TranslationChangeEvent) => {\n        if (this.lastKey && event.lang === this.translate.currentLang) {\n          this.lastKey = null;\n          this.updateValue(query, interpolateParams, event.translations);\n        }\n      });\n    }\n\n    // subscribe to onLangChange event, in case the language changes\n    if (!this.onLangChange) {\n      this.onLangChange = this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\n        if (this.lastKey) {\n          this.lastKey = null; // we want to make sure it doesn't return the same value until it's been updated\n          this.updateValue(query, interpolateParams, event.translations);\n        }\n      });\n    }\n\n    // subscribe to onDefaultLangChange event, in case the default language changes\n    if (!this.onDefaultLangChange) {\n      this.onDefaultLangChange = this.translate.onDefaultLangChange.subscribe(() => {\n        if (this.lastKey) {\n          this.lastKey = null; // we want to make sure it doesn't return the same value until it's been updated\n          this.updateValue(query, interpolateParams);\n        }\n      });\n    }\n\n    return this.value;\n  }\n\n  /**\n   * Clean any existing subscription to change events\n   */\n  private _dispose(): void {\n    if (typeof this.onTranslationChange !== 'undefined') {\n      this.onTranslationChange.unsubscribe();\n      this.onTranslationChange = undefined;\n    }\n    if (typeof this.onLangChange !== 'undefined') {\n      this.onLangChange.unsubscribe();\n      this.onLangChange = undefined;\n    }\n    if (typeof this.onDefaultLangChange !== 'undefined') {\n      this.onDefaultLangChange.unsubscribe();\n      this.onDefaultLangChange = undefined;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._dispose();\n  }\n}\n","import {NgModule, ModuleWithProviders, Provider} from \"@angular/core\";\nimport {TranslateLoader, TranslateFakeLoader} from \"./lib/translate.loader\";\nimport {MissingTranslationHandler, FakeMissingTranslationHandler} from \"./lib/missing-translation-handler\";\nimport {TranslateParser, TranslateDefaultParser} from \"./lib/translate.parser\";\nimport {TranslateCompiler, TranslateFakeCompiler} from \"./lib/translate.compiler\";\nimport {TranslateDirective} from \"./lib/translate.directive\";\nimport {TranslatePipe} from \"./lib/translate.pipe\";\nimport {TranslateStore} from \"./lib/translate.store\";\nimport {USE_DEFAULT_LANG, DEFAULT_LANGUAGE, USE_STORE, TranslateService, USE_EXTEND} from \"./lib/translate.service\";\n\nexport * from \"./lib/translate.loader\";\nexport * from \"./lib/translate.service\";\nexport * from \"./lib/missing-translation-handler\";\nexport * from \"./lib/translate.parser\";\nexport * from \"./lib/translate.compiler\";\nexport * from \"./lib/translate.directive\";\nexport * from \"./lib/translate.pipe\";\nexport * from \"./lib/translate.store\";\n\nexport interface TranslateModuleConfig {\n  loader?: Provider;\n  compiler?: Provider;\n  parser?: Provider;\n  missingTranslationHandler?: Provider;\n  // isolate the service instance, only works for lazy loaded modules or components with the \"providers\" property\n  isolate?: boolean;\n  // extends translations for a given language instead of ignoring them if present\n  extend?: boolean;\n  useDefaultLang?: boolean;\n  defaultLanguage?: string;\n}\n\n@NgModule({\n  declarations: [\n    TranslatePipe,\n    TranslateDirective\n  ],\n  exports: [\n    TranslatePipe,\n    TranslateDirective\n  ]\n})\nexport class TranslateModule {\n  /**\n   * Use this method in your root module to provide the TranslateService\n   */\n  static forRoot(config: TranslateModuleConfig = {}): ModuleWithProviders<TranslateModule> {\n    return {\n      ngModule: TranslateModule,\n      providers: [\n        config.loader || {provide: TranslateLoader, useClass: TranslateFakeLoader},\n        config.compiler || {provide: TranslateCompiler, useClass: TranslateFakeCompiler},\n        config.parser || {provide: TranslateParser, useClass: TranslateDefaultParser},\n        config.missingTranslationHandler || {provide: MissingTranslationHandler, useClass: FakeMissingTranslationHandler},\n        TranslateStore,\n        {provide: USE_STORE, useValue: config.isolate},\n        {provide: USE_DEFAULT_LANG, useValue: config.useDefaultLang},\n        {provide: USE_EXTEND, useValue: config.extend},\n        {provide: DEFAULT_LANGUAGE, useValue: config.defaultLanguage},\n        TranslateService\n      ]\n    };\n  }\n\n  /**\n   * Use this method in your other (non root) modules to import the directive/pipe\n   */\n  static forChild(config: TranslateModuleConfig = {}): ModuleWithProviders<TranslateModule> {\n    return {\n      ngModule: TranslateModule,\n      providers: [\n        config.loader || {provide: TranslateLoader, useClass: TranslateFakeLoader},\n        config.compiler || {provide: TranslateCompiler, useClass: TranslateFakeCompiler},\n        config.parser || {provide: TranslateParser, useClass: TranslateDefaultParser},\n        config.missingTranslationHandler || {provide: MissingTranslationHandler, useClass: FakeMissingTranslationHandler},\n        {provide: USE_STORE, useValue: config.isolate},\n        {provide: USE_DEFAULT_LANG, useValue: config.useDefaultLang},\n        {provide: USE_EXTEND, useValue: config.extend},\n        {provide: DEFAULT_LANGUAGE, useValue: config.defaultLanguage},\n        TranslateService\n      ]\n    };\n  }\n}\n"]}
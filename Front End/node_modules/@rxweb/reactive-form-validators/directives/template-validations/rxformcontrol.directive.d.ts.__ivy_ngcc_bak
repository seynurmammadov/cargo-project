import { ElementRef, OnInit, OnDestroy, Renderer2 } from '@angular/core';
import { Validator, AbstractControl, FormControl } from '@angular/forms';
import { BaseValidator } from './base-validator.directive';
import { DecimalProvider } from "../../domain/element-processor/decimal.provider";
import { AlphaConfig, BaseConfig, CompareConfig, ComposeConfig, ContainsConfig, CreditCardConfig, DateConfig, DefaultConfig, DigitConfig, EmailConfig, ExtensionConfig, FactorConfig, MessageConfig, NumberConfig, NumericConfig, PasswordConfig, RangeConfig, RequiredConfig, RuleConfig, SizeConfig, TimeConfig, DifferentConfig, RelationalOperatorConfig, UniqueConfig } from '../../models/config';
export declare class RxFormControlDirective extends BaseValidator implements OnInit, OnDestroy, Validator {
    private elementRef;
    private renderer;
    private decimalProvider;
    private eventListeners;
    private isNumericSubscribed;
    private isFocusCalled;
    private isMasked;
    validationControls: {
        [key: string]: FormControl;
    };
    rxalpha: AlphaConfig;
    rxalphaNumeric: AlphaConfig;
    rxascii: BaseConfig;
    rxcompare: CompareConfig;
    rxcompose: ComposeConfig;
    rxcontains: ContainsConfig;
    rxcreditCard: CreditCardConfig;
    rxdataUri: BaseConfig;
    rxdifferent: DifferentConfig;
    rxdigit: DigitConfig;
    rxemail: EmailConfig;
    rxendsWith: DefaultConfig;
    rxeven: BaseConfig;
    rxextension: ExtensionConfig;
    rxfactor: FactorConfig;
    rxfileSize: SizeConfig;
    rxgreaterThanEqualTo: RelationalOperatorConfig;
    rxgreaterThan: RelationalOperatorConfig;
    rxhexColor: MessageConfig;
    rxjson: DefaultConfig;
    rxlatitude: BaseConfig;
    rxlatLong: BaseConfig;
    rxleapYear: BaseConfig;
    rxlessThan: RelationalOperatorConfig;
    rxlessThanEqualTo: RelationalOperatorConfig;
    rxlongitude: BaseConfig;
    rxlowerCase: MessageConfig;
    rxmac: BaseConfig;
    rxmaxDate: DateConfig;
    rxmaxLength: NumberConfig;
    rxmaxNumber: NumberConfig;
    rxminDate: DateConfig;
    rxminLength: NumberConfig;
    rxminNumber: NumberConfig;
    rxnumeric: NumericConfig;
    rxodd: BaseConfig;
    rxpassword: PasswordConfig;
    rxport: BaseConfig;
    rxprimeNumber: BaseConfig;
    rxrequired: RequiredConfig;
    rxrange: RangeConfig;
    rxrule: RuleConfig;
    rxstartsWith: DefaultConfig;
    rxtime: TimeConfig;
    rxupperCase: MessageConfig;
    rxurl: DefaultConfig;
    rxunique: UniqueConfig;
    rxnotEmpty: BaseConfig;
    rxcusip: BaseConfig;
    rxgrid: BaseConfig;
    rxdate: BaseConfig;
    constructor(elementRef: ElementRef, renderer: Renderer2, decimalProvider: DecimalProvider);
    ngOnInit(): void;
    blurEvent(): void;
    bindNumericElementEvent(config?: NumericConfig): void;
    bindValueChangeEvent(): void;
    subscribeNumericFormatter(): void;
    subscribeMaskValidator(): void;
    private setValueOnElement;
    private setTemplateValidators;
    private updateOnElementClass;
    private setValidatorConfig;
    validate(control: AbstractControl): {
        [key: string]: any;
    };
    ngOnDestroy(): void;
}

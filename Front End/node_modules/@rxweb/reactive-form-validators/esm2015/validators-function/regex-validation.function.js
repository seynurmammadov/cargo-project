import { RegexValidator } from "../util/regex-validator";
import { ObjectMaker } from "../util/object-maker";
import { ValidatorValueChecker } from "../util/validator-value-checker";
import { getConfigObject } from "../util/config-provider";
export function regexValidation(configModel, control, regExp, key) {
    let config = getConfigObject(configModel, control);
    return validate(config, control, regExp, key);
}
export function validate(config, control, regExp, key) {
    if (ValidatorValueChecker.pass(control, config)) {
        if (!RegexValidator.isValid(control.value, regExp))
            return ObjectMaker.toJson(key, config, [control.value]);
    }
    return ObjectMaker.null();
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVnZXgtdmFsaWRhdGlvbi5mdW5jdGlvbi5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0ByeHdlYi9yZWFjdGl2ZS1mb3JtLXZhbGlkYXRvcnMvIiwic291cmNlcyI6WyJ2YWxpZGF0b3JzLWZ1bmN0aW9uL3JlZ2V4LXZhbGlkYXRpb24uZnVuY3Rpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUEsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3pELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUVuRCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUN4RSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFHMUQsTUFBTSxVQUFVLGVBQWUsQ0FDM0IsV0FBdUIsRUFDdkIsT0FBd0IsRUFDeEIsTUFBYyxFQUNkLEdBQVc7SUFFWCxJQUFJLE1BQU0sR0FBRyxlQUFlLENBQUMsV0FBVyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQ25ELE9BQU8sUUFBUSxDQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFFLEdBQUcsQ0FBQyxDQUFBO0FBQ2pELENBQUM7QUFFRCxNQUFNLFVBQVUsUUFBUSxDQUFDLE1BQVcsRUFDaEMsT0FBd0IsRUFDeEIsTUFBYyxFQUNkLEdBQVc7SUFDWCxJQUFJLHFCQUFxQixDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsTUFBTSxDQUFDLEVBQUU7UUFDN0MsSUFBSSxDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxNQUFNLENBQUM7WUFDOUMsT0FBTyxXQUFXLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxNQUFNLEVBQUUsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztLQUMvRDtJQUNELE9BQU8sV0FBVyxDQUFDLElBQUksRUFBRSxDQUFDO0FBQzlCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gICAgQWJzdHJhY3RDb250cm9sXHJcbn0gZnJvbSBcIkBhbmd1bGFyL2Zvcm1zXCI7XHJcblxyXG5pbXBvcnQgeyBSZWdleFZhbGlkYXRvciB9IGZyb20gXCIuLi91dGlsL3JlZ2V4LXZhbGlkYXRvclwiO1xyXG5pbXBvcnQgeyBPYmplY3RNYWtlciB9IGZyb20gXCIuLi91dGlsL29iamVjdC1tYWtlclwiO1xyXG5pbXBvcnQgeyBCYXNlQ29uZmlnIH0gZnJvbSBcIi4uL21vZGVscy9jb25maWcvYmFzZS1jb25maWdcIjtcclxuaW1wb3J0IHsgVmFsaWRhdG9yVmFsdWVDaGVja2VyIH0gZnJvbSBcIi4uL3V0aWwvdmFsaWRhdG9yLXZhbHVlLWNoZWNrZXJcIjtcclxuaW1wb3J0IHsgZ2V0Q29uZmlnT2JqZWN0IH0gZnJvbSBcIi4uL3V0aWwvY29uZmlnLXByb3ZpZGVyXCI7XHJcblxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHJlZ2V4VmFsaWRhdGlvbihcclxuICAgIGNvbmZpZ01vZGVsOiBCYXNlQ29uZmlnLFxyXG4gICAgY29udHJvbDogQWJzdHJhY3RDb250cm9sLFxyXG4gICAgcmVnRXhwOiBSZWdFeHAsXHJcbiAgICBrZXk6IHN0cmluZ1xyXG4pIHtcclxuICAgIGxldCBjb25maWcgPSBnZXRDb25maWdPYmplY3QoY29uZmlnTW9kZWwsIGNvbnRyb2wpO1xyXG4gICAgcmV0dXJuIHZhbGlkYXRlKGNvbmZpZywgY29udHJvbCwgcmVnRXhwLCBrZXkpXHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZShjb25maWc6IGFueSxcclxuICAgIGNvbnRyb2w6IEFic3RyYWN0Q29udHJvbCxcclxuICAgIHJlZ0V4cDogUmVnRXhwLFxyXG4gICAga2V5OiBzdHJpbmcpIHtcclxuICAgIGlmIChWYWxpZGF0b3JWYWx1ZUNoZWNrZXIucGFzcyhjb250cm9sLCBjb25maWcpKSB7XHJcbiAgICAgICAgaWYgKCFSZWdleFZhbGlkYXRvci5pc1ZhbGlkKGNvbnRyb2wudmFsdWUsIHJlZ0V4cCkpXHJcbiAgICAgICAgICAgIHJldHVybiBPYmplY3RNYWtlci50b0pzb24oa2V5LCBjb25maWcsIFtjb250cm9sLnZhbHVlXSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gT2JqZWN0TWFrZXIubnVsbCgpO1xyXG59XHJcblxyXG4iXX0=
import { defaultContainer } from "../core/defaultContainer";
import { STRING } from '../const/validator.const';
import { ApplicationUtil } from '../util/app-util';
import { RX_WEB_VALIDATOR } from "../const";
export function baseValidator(config, type, validator) {
    var rxwebValidator = function (control, target) {
        if (typeof control == STRING)
            defaultContainer.init(target, 0, control, type, config, false);
        else {
            if (config && (!control.validatorConfig || !control.validatorConfig[type]))
                ApplicationUtil.configureControl(control, config, type);
            return validator(control);
        }
        return null;
    };
    Object.defineProperty(rxwebValidator, "name", { value: RX_WEB_VALIDATOR });
    return rxwebValidator;
}
export function baseAsyncValidatorExtension(config, type, validator) {
    var rxwebValidator = function (control, target) {
        if (typeof control == STRING)
            defaultContainer.init(target, 0, control, type, config, true);
        else {
            if (config && (!control.validatorConfig || !control.validatorConfig[type]))
                ApplicationUtil.configureControl(control, config, type);
            return validator(control);
        }
        return null;
    };
    Object.defineProperty(rxwebValidator, "name", { value: RX_WEB_VALIDATOR });
    return rxwebValidator;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZS12YWxpZGF0b3IuZnVuY3Rpb24uanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Acnh3ZWIvcmVhY3RpdmUtZm9ybS12YWxpZGF0b3JzLyIsInNvdXJjZXMiOlsidmFsaWRhdG9ycy1leHRlbnNpb24vYmFzZS12YWxpZGF0b3IuZnVuY3Rpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0EsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sMEJBQTBCLENBQUE7QUFDM0QsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNuRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFHNUMsTUFBTSxVQUFVLGFBQWEsQ0FBQyxNQUFXLEVBQUUsSUFBUyxFQUFFLFNBQW1CO0lBQ3JFLElBQUksY0FBYyxHQUFHLFVBQUMsT0FBWSxFQUFFLE1BQWU7UUFDL0MsSUFBSSxPQUFPLE9BQU8sSUFBSSxNQUFNO1lBQ3hCLGdCQUFnQixDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFDLEtBQUssQ0FBQyxDQUFDO2FBQzlEO1lBQ0EsSUFBSSxNQUFNLElBQUksQ0FBQyxDQUFDLE9BQU8sQ0FBQyxlQUFlLElBQUksQ0FBQyxPQUFPLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUN0RSxlQUFlLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQztZQUM1RCxPQUFRLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQztTQUM5QjtRQUNELE9BQU8sSUFBSSxDQUFBO0lBQ2YsQ0FBQyxDQUFBO0lBQ0QsTUFBTSxDQUFDLGNBQWMsQ0FBQyxjQUFjLEVBQUUsTUFBTSxFQUFFLEVBQUUsS0FBSyxFQUFFLGdCQUFnQixFQUFFLENBQUMsQ0FBQztJQUMzRSxPQUFPLGNBQWMsQ0FBQztBQUMxQixDQUFDO0FBRUQsTUFBTSxVQUFVLDJCQUEyQixDQUFDLE1BQVcsRUFBRSxJQUFTLEVBQUUsU0FBbUI7SUFDbkYsSUFBSSxjQUFjLEdBQUcsVUFBQyxPQUFZLEVBQUUsTUFBZTtRQUMvQyxJQUFJLE9BQU8sT0FBTyxJQUFJLE1BQU07WUFDeEIsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7YUFDN0Q7WUFDRCxJQUFJLE1BQU0sSUFBSSxDQUFDLENBQUMsT0FBTyxDQUFDLGVBQWUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ3RFLGVBQWUsQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDO1lBQzVELE9BQU8sU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQzdCO1FBQ0QsT0FBTyxJQUFJLENBQUE7SUFDZixDQUFDLENBQUE7SUFDRCxNQUFNLENBQUMsY0FBYyxDQUFDLGNBQWMsRUFBRSxNQUFNLEVBQUUsRUFBRSxLQUFLLEVBQUUsZ0JBQWdCLEVBQUUsQ0FBQyxDQUFDO0lBQzNFLE9BQU8sY0FBYyxDQUFDO0FBQzFCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gICAgVmFsaWRhdG9yRm4sIEFzeW5jVmFsaWRhdG9yRm5cclxufSBmcm9tIFwiQGFuZ3VsYXIvZm9ybXNcIjtcclxuaW1wb3J0IHsgZGVmYXVsdENvbnRhaW5lciB9IGZyb20gXCIuLi9jb3JlL2RlZmF1bHRDb250YWluZXJcIlxyXG5pbXBvcnQgeyBTVFJJTkcgfSBmcm9tICcuLi9jb25zdC92YWxpZGF0b3IuY29uc3QnO1xyXG5pbXBvcnQgeyBBcHBsaWNhdGlvblV0aWwgfSBmcm9tICcuLi91dGlsL2FwcC11dGlsJztcclxuaW1wb3J0IHsgUlhfV0VCX1ZBTElEQVRPUiB9IGZyb20gXCIuLi9jb25zdFwiO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSBcInJ4anNcIjtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBiYXNlVmFsaWRhdG9yKGNvbmZpZzogYW55LCB0eXBlOiBhbnksIHZhbGlkYXRvcjogRnVuY3Rpb24pOiBWYWxpZGF0b3JGbiB7XHJcbiAgICB2YXIgcnh3ZWJWYWxpZGF0b3IgPSAoY29udHJvbDogYW55LCB0YXJnZXQ/OiBvYmplY3QpOiB7IFtrZXk6IHN0cmluZ106IGFueSB9ID0+IHtcclxuICAgICAgICBpZiAodHlwZW9mIGNvbnRyb2wgPT0gU1RSSU5HKVxyXG4gICAgICAgICAgICBkZWZhdWx0Q29udGFpbmVyLmluaXQodGFyZ2V0LCAwLCBjb250cm9sLCB0eXBlLCBjb25maWcsZmFsc2UpO1xyXG4gICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgIGlmIChjb25maWcgJiYgKCFjb250cm9sLnZhbGlkYXRvckNvbmZpZyB8fCAhY29udHJvbC52YWxpZGF0b3JDb25maWdbdHlwZV0pKVxyXG4gICAgICAgICAgICAgICAgQXBwbGljYXRpb25VdGlsLmNvbmZpZ3VyZUNvbnRyb2woY29udHJvbCwgY29uZmlnLCB0eXBlKTtcclxuICAgICAgICAgICAgcmV0dXJuICB2YWxpZGF0b3IoY29udHJvbCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBudWxsXHJcbiAgICB9XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkocnh3ZWJWYWxpZGF0b3IsIFwibmFtZVwiLCB7IHZhbHVlOiBSWF9XRUJfVkFMSURBVE9SIH0pO1xyXG4gICAgcmV0dXJuIHJ4d2ViVmFsaWRhdG9yO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gYmFzZUFzeW5jVmFsaWRhdG9yRXh0ZW5zaW9uKGNvbmZpZzogYW55LCB0eXBlOiBhbnksIHZhbGlkYXRvcjogRnVuY3Rpb24pOiBBc3luY1ZhbGlkYXRvckZuIHtcclxuICAgIHZhciByeHdlYlZhbGlkYXRvciA9IChjb250cm9sOiBhbnksIHRhcmdldD86IG9iamVjdCk6IE9ic2VydmFibGU8eyBba2V5OiBzdHJpbmddOiBhbnkgfT4gPT4ge1xyXG4gICAgICAgIGlmICh0eXBlb2YgY29udHJvbCA9PSBTVFJJTkcpXHJcbiAgICAgICAgICAgIGRlZmF1bHRDb250YWluZXIuaW5pdCh0YXJnZXQsIDAsIGNvbnRyb2wsIHR5cGUsIGNvbmZpZywgdHJ1ZSk7XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGlmIChjb25maWcgJiYgKCFjb250cm9sLnZhbGlkYXRvckNvbmZpZyB8fCAhY29udHJvbC52YWxpZGF0b3JDb25maWdbdHlwZV0pKVxyXG4gICAgICAgICAgICAgICAgQXBwbGljYXRpb25VdGlsLmNvbmZpZ3VyZUNvbnRyb2woY29udHJvbCwgY29uZmlnLCB0eXBlKTtcclxuICAgICAgICAgICAgcmV0dXJuIHZhbGlkYXRvcihjb250cm9sKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIG51bGxcclxuICAgIH1cclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyeHdlYlZhbGlkYXRvciwgXCJuYW1lXCIsIHsgdmFsdWU6IFJYX1dFQl9WQUxJREFUT1IgfSk7XHJcbiAgICByZXR1cm4gcnh3ZWJWYWxpZGF0b3I7XHJcbn1cclxuIl19
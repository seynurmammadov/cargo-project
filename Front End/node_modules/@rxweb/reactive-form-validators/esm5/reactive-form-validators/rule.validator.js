import * as tslib_1 from "tslib";
import { ObjectMaker } from "../util/object-maker";
import { FormProvider } from '../util/form-provider';
import { getConfigObject } from "../util/config-provider";
export function ruleValidator(configModel, entity) {
    return function (control) {
        var e_1, _a;
        var config = getConfigObject(configModel, control);
        if (FormProvider.ProcessRule(control, config)) {
            var result = null;
            try {
                for (var _b = tslib_1.__values(config.customRules), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var rule = _c.value;
                    result = rule(entity);
                    if (result)
                        break;
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
            if (result)
                return result;
        }
        return ObjectMaker.null();
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicnVsZS52YWxpZGF0b3IuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Acnh3ZWIvcmVhY3RpdmUtZm9ybS12YWxpZGF0b3JzLyIsInNvdXJjZXMiOlsicmVhY3RpdmUtZm9ybS12YWxpZGF0b3JzL3J1bGUudmFsaWRhdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFLQSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFFbkQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3JELE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSx5QkFBeUIsQ0FBQztBQUV4RCxNQUFNLFVBQVUsYUFBYSxDQUFDLFdBQXVCLEVBQUUsTUFBVztJQUNoRSxPQUFPLFVBQUMsT0FBd0I7O1FBQzlCLElBQUksTUFBTSxHQUFHLGVBQWUsQ0FBQyxXQUFXLEVBQUMsT0FBTyxDQUFDLENBQUM7UUFDbEQsSUFBSSxZQUFZLENBQUMsV0FBVyxDQUFDLE9BQU8sRUFBRSxNQUFNLENBQUMsRUFBRTtZQUM3QyxJQUFJLE1BQU0sR0FBRyxJQUFJLENBQUM7O2dCQUNsQixLQUFpQixJQUFBLEtBQUEsaUJBQUEsTUFBTSxDQUFDLFdBQVcsQ0FBQSxnQkFBQSw0QkFBRTtvQkFBaEMsSUFBSSxJQUFJLFdBQUE7b0JBQ1gsTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztvQkFDdEIsSUFBSSxNQUFNO3dCQUNSLE1BQU07aUJBQ1Q7Ozs7Ozs7OztZQUNELElBQUksTUFBTTtnQkFDUixPQUFPLE1BQU0sQ0FBQztTQUNqQjtRQUFDLE9BQU8sV0FBVyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQzlCLENBQUMsQ0FBQTtBQUNILENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gIFZhbGlkYXRvckZuLFxyXG4gIEFic3RyYWN0Q29udHJvbFxyXG59IGZyb20gXCJAYW5ndWxhci9mb3Jtc1wiO1xyXG5cclxuaW1wb3J0IHsgT2JqZWN0TWFrZXIgfSBmcm9tIFwiLi4vdXRpbC9vYmplY3QtbWFrZXJcIjtcclxuaW1wb3J0IHsgUnVsZUNvbmZpZyB9IGZyb20gXCIuLi9tb2RlbHMvY29uZmlnL3J1bGUtY29uZmlnXCI7XHJcbmltcG9ydCB7IEZvcm1Qcm92aWRlciB9IGZyb20gJy4uL3V0aWwvZm9ybS1wcm92aWRlcic7XHJcbmltcG9ydCB7Z2V0Q29uZmlnT2JqZWN0fSBmcm9tIFwiLi4vdXRpbC9jb25maWctcHJvdmlkZXJcIjtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBydWxlVmFsaWRhdG9yKGNvbmZpZ01vZGVsOiBSdWxlQ29uZmlnLCBlbnRpdHk6IGFueSk6IFZhbGlkYXRvckZuIHtcclxuICByZXR1cm4gKGNvbnRyb2w6IEFic3RyYWN0Q29udHJvbCk6IHsgW2tleTogc3RyaW5nXTogYW55IH0gPT4ge1xyXG4gICAgbGV0IGNvbmZpZyA9IGdldENvbmZpZ09iamVjdChjb25maWdNb2RlbCxjb250cm9sKTtcclxuICAgIGlmIChGb3JtUHJvdmlkZXIuUHJvY2Vzc1J1bGUoY29udHJvbCwgY29uZmlnKSkge1xyXG4gICAgICBsZXQgcmVzdWx0ID0gbnVsbDtcclxuICAgICAgZm9yIChsZXQgcnVsZSBvZiBjb25maWcuY3VzdG9tUnVsZXMpIHtcclxuICAgICAgICByZXN1bHQgPSBydWxlKGVudGl0eSk7XHJcbiAgICAgICAgaWYgKHJlc3VsdClcclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICB9XHJcbiAgICAgIGlmIChyZXN1bHQpXHJcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgIH0gcmV0dXJuIE9iamVjdE1ha2VyLm51bGwoKTtcclxuICB9XHJcbn1cclxuIl19